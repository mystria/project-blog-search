plugins {
    id 'groovy'
    id 'com.mys.java-common-conventions'
    id 'java-library'
    id 'jacoco'
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'no.entur.mapstruct.spi:protobuf-spi-impl:1.44'

    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.2'

    testImplementation 'org.mapstruct:mapstruct:1.5.3.Final'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.instancio:instancio-junit:2.16.0'
}

test {
    useJUnitPlatform()
    doFirst {
        // build 시에는 integration-test 를 제외하고 test 를 수행한다.
        // 그러나 개별 test 수행 시에는 integration-test 도 수행할 수 있게 한다.
        if (filter.commandLineIncludePatterns.empty) {
            useJUnitPlatform {
                excludeTags "integration-test"
            }
        }
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }
    finalizedBy jacocoTestCoverageVerification
}
